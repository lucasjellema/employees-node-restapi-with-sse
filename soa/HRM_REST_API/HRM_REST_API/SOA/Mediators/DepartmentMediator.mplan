<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 12.1.3.0.0 at [16-9-17 12:54].-->
<Mediator name="HrmMediator" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" wsdlTargetNamespace="http://xmlns.oracle.com/HRM_REST_API/HRM_REST_API/HRMRestAPI" xmlns="http://xmlns.oracle.com/sca/1.0/mediator">
   <operation name="GetDepartments" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="GetDepartments.GetDepartments">
            <action>
               <transform>
                  <part name="$out.InputParameters"
                        function="xslt(../Transformations/empty_To_InputParameters1.xsl, $in.Empty)"/>
               </transform>
               <invoke reference="GetDepartments" operation="GetDepartments">
                  <onReply>
                     <transform>
                        <part name="$out.reply"
                              function="xslt(../Transformations/GetDepartmentsOutputParameters_To_departments1.xsl, $in.OutputParameters)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="CreateDepartment" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="CreateDepartment.CreateDepartment">
            <action>
               <transform>
                  <part name="$out.InputParameters"
                        function="xslt(../Transformations/CreateDepartment_To_InputParameters1.xsl, $in.request)"/>
               </transform>
               <invoke reference="CreateDepartment" operation="CreateDepartment">
                  <onReply>
                     <transform>
                        <part name="$out.reply"
                              function="xslt(../Transformations/ResultCreateOutputParameters_To_Result1.xsl, $in.OutputParameters)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="getDepartmentDetails" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="getDepartmentDetails.getDepartmentDetails">
            <action>
               <transform>
                  <part name="$out.InputParameters"
                        function="xslt(../Transformations/getDepartmentDetails_params_To_InputParameters1.xsl, $in.request)"/>
               </transform>
               <invoke reference="getDepartmentDetails" operation="getDepartmentDetails">
                  <onReply>
                     <transform>
                        <part name="$out.reply"
                              function="xslt(../Transformations/DepartmentDetailsOutputParameters_To_Department1.xsl, $in.OutputParameters)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="getEmployees" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="getEmployees.getEmployees">
            <action>
               <transform>
                  <part name="$out.InputParameters"
                        function="xslt(../Transformations/empty_To_InputParameters2.xsl, $in.Empty)"/>
               </transform>
               <invoke reference="getEmployees" operation="getEmployees">
                  <onReply>
                     <transform>
                        <part name="$out.reply"
                              function="xslt(../Transformations/getEmployeesOutputParameters_To_Employees1.xsl, $in.OutputParameters)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="createEmployee" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="createEmployee.createEmployee">
            <action>
               <transform>
                  <part name="$out.InputParameters"
                        function="xslt(../Transformations/createEmployee_To_InputParameters1.xsl, $in.request)"/>
               </transform>
               <invoke reference="createEmployee" operation="createEmployee">
                  <onReply>
                     <transform>
                        <part name="$out.Empty"
                              function="xslt(../Transformations/OutputParameters_To_empty1.xsl, $in.OutputParameters)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="getEmployeeDetails" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="getEmployeeDetails.getEmployeeDetails">
            <action>
               <transform>
                  <part name="$out.InputParameters"
                        function="xslt(../Transformations/getEmployeeDetails_params_To_InputParameters1.xsl, $in.request)"/>
               </transform>
               <invoke reference="getEmployeeDetails" operation="getEmployeeDetails">
                  <onReply>
                     <transform>
                        <part name="$out.reply"
                              function="xslt(../Transformations/getEmployeeDetailsOutputParameters_To_Employee1.xsl, $in.OutputParameters)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
</Mediator>
